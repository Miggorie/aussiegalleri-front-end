@use "./variables" as *;
@use "../base" as b;

// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus,
    &:focus-within {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus,
    &:focus-within {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Kitty Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}
@mixin respond-to-max($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint name: #{$breakpoint}.";
  }
}

@mixin respond-to-min($breakpoint) {
  @if map-has-key($breakpoint-mins, $breakpoint) {
    @media (min-width: map-get($breakpoint, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint name: #{$breakpoint}.";
  }
}

@mixin accordion-button {
  visibility: hidden;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
  overflow: hidden;

  &.accordion-content-visible {
    visibility: visible;
    opacity: 1;
    overflow: hidden;
  }
}

//Border-radius

$border-radius: (
  small: 0.25rem,
  medium: 0.5rem,
  large: 1rem,
);

@mixin border-radius-small {
  border-radius: map-get($border-radius, small);
}

@mixin border-radius-medium {
  border-radius: map-get($border-radius, medium);
}

@mixin border-radius-large {
  border-radius: map-get($border-radius, large);
}

//COMMON USED

@mixin dog-name-list-view {
  color: b.$dark-text-color;
  margin-top: 1rem;
  margin-bottom: 2.5rem;
  font-size: 1rem;
  font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",
    "Lucida Sans Unicode", Geneva, Verdana, sans-serif;
}

@mixin page-title {
  color: b.$dark-text-color;
  margin-top: 1rem;
  margin-bottom: 2.5rem;
  font-size: 2.2rem;
  font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",
    "Lucida Sans Unicode", Geneva, Verdana, sans-serif;
}

//RESPONSIVE

@mixin xs-screen {
  @media (max-width: 640px) {
    @content;
  }
}

@mixin small-screen {
  @media (max-width: 768px) {
    @content;
  }
}

@mixin medium-screen {
  @media (max-width: 1024px) {
    @content;
  }
}

@mixin large-screen {
  @media only screen and (max-width: 1280px) {
    @content;
  }
}

@mixin xl-screen {
  @media only screen and (min-width: 1536px) {
    @content;
  }
}

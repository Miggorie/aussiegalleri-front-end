@use "./variables" as *;

// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus,
    &:focus-within {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus,
    &:focus-within {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Kitty Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}
@mixin respond-to-max($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint name: #{$breakpoint}.";
  }
}

@mixin respond-to-min($breakpoint) {
  @if map-has-key($breakpoint-mins, $breakpoint) {
    @media (min-width: map-get($breakpoint, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint name: #{$breakpoint}.";
  }
}

@mixin accordion-button {
  visibility: hidden;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
  overflow: hidden;

  &.accordion-content-visible {
    visibility: visible;
    opacity: 1;
    overflow: hidden;
  }
}
